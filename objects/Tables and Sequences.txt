-- To list all tables, views, sequences, procedures try: SELECT * FROM USER_TABLES;  SELECT * FROM USER_VIEWS; SELECT * FROM USER_SEQUENCES;  SELECT * FROM USER_PROCEDURES;


-- Table and Sequence of Users

CREATE TABLE Users(
	user_id INTEGER PRIMARY KEY,
	username VARCHAR2(32) NOT NULL,
	password VARCHAR2(32) NOT NULL,
	first_name VARCHAR2(20),
	last_name VARCHAR2(20),
	email VARCHAR2(32),
	address VARCHAR2(128),
	status VARCHAR2(20) DEFAULT 'Customer' NOT NULL,
	register_date DATE DEFAULT CURRENT_DATE NOT NULL,
	CONSTRAINT CHK_status CHECK (status IN ('Owner', 'Manager', 'Employee', 'Customer'))
);
CREATE SEQUENCE users_seq START WITH 1;


-- Table of Sequence of Drink Types

CREATE TABLE Drink_Types(
	type_id INTEGER PRIMARY KEY,
	type_name VARCHAR2(20) NOT NULL,
	CONSTRAINT UC_Drink_Types_type_name UNIQUE (type_name);
);
CREATE SEQUENCE drink_types_seq START WITH 1;


-- Table and Sequence of Drinks

CREATE TABLE Drinks(
	drink_id INTEGER PRIMARY KEY,
	drink_name VARCHAR2(32) NOT NULL UNIQUE,
	drink_type_id INTEGER NOT NULL,
	drink_price NUMBER(10, 2) NOT NULL,
	CONSTRAINT fk_drinks_drink_type_id FOREIGN KEY (drink_type_id) REFERENCES Drink_Types(type_id)
);
CREATE SEQUENCE drinks_seq START WITH 1;


-- Table of Drink Orders

CREATE TABLE Drink_Orders(
	order_id INTEGER PRIMARY KEY,
	order_by INTEGER NOT NULL,
	order_for VARCHAR2(32) DEFAULT 'Anonymous Customer' NOT NULL,
	address VARCHAR2(128),
	drink_id INTEGER NOT NULL,
	drink_hotcold VARCHAR2(4) NOT NULL CHECK(drink_hotcold IN ('hot', 'cold')),
	drink_quantity INTEGER NOT NULL,
	total_amount NUMBER(10, 2) NOT NULL,
	order_date DATE DEFAULT CURRENT_DATE NOT NULL,
	CONSTRAINT fk_drink_orders_order_by FOREIGN KEY (order_by) REFERENCES Users(user_id),
	CONSTRAINT fk_drink_orders_drink_id FOREIGN KEY (drink_id) REFERENCES Drinks(drink_id)
);
CREATE SEQUENCE drink_orders_seq START WITH 1;

